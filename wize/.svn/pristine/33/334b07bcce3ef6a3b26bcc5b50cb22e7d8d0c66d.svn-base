
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Date;

import javax.net.ssl.HttpsURLConnection;

import com.google.gson.Gson;
import com.google.gson.annotations.Expose;

public class Request {
	public String Command;
	public String MAC;
	public String Weight;
	public String Tag;
	public byte[] Image;
	private int timeout = 1000;
	private static boolean complete = false;
	public ResponseListener OnResponse = null;
	
	public Request()
	{
		
	}
	
	public String toJson()
	{
		Gson gson = new Gson();
		return gson.toJson(this);
	}
	
	public void  fromJson(String json)
	{
		Gson gson = new Gson();
		Request c = gson.fromJson(json,Request.class);
		this.Command = c.Command;
		this.MAC = c.MAC;
		this.Weight = c.Weight;
		this.Tag = c.Tag;
		this.Image = c.Image;
	}
	
	public void send(String url)
	{
		try
		{
			complete = false;
			/*Thread t = new Thread(() -> {*/
				try
				{
				String urlParameters = "request=" +this.toJson();

				URL obj = new URL(url);
				HttpURLConnection con = (HttpURLConnection) obj.openConnection();

				//add reuqest header
				con.setRequestMethod("POST");
				con.setRequestProperty("User-Agent", "Mozilla/5.0");
				con.setRequestProperty("Accept-Language", "en-US,en;q=0.5");
				//con.setRequestProperty("Content-Type", "application/json; charset=utf-8");
				//con.setRequestProperty("Content-Length", String.valueOf(this.toJson().length()));

				//String urlParameters = this.toJson();
				
				// Send post request
				con.setDoOutput(true);
				DataOutputStream wr = new DataOutputStream(con.getOutputStream());
				wr.writeBytes(urlParameters);
				wr.flush();
				wr.close();
				
				int responseCode = con.getResponseCode();
				System.out.println("\nSending 'POST' request to URL : " + url);
				System.out.println("Post parameters : " + urlParameters);
				System.out.println("Response Code : " + responseCode);

				BufferedReader in = new BufferedReader(
				        new InputStreamReader(con.getInputStream()));
				String inputLine;
				StringBuffer response = new StringBuffer();

				while ((inputLine = in.readLine()) != null) {
					response.append(inputLine);
				}
				in.close();
				
				//print result
				Response(response.toString());
				complete = true;
				
				
				}
				catch(Exception ex)
				{
					Response(ex.getMessage());
					//System.out.println(ex.getMessage());	
				}
			/*});
			t.start();
			
			Date t1 = new Date();
			while(new Date().getTime() - t1.getTime() < timeout && !complete);
			 		t.interrupt();*/
				
					
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());	
		}
		
	}
	
	private void Response(String data)
	{
		if(OnResponse != null)
			OnResponse.Reponse(data);
	}
}
